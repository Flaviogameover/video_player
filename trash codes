        def next_video(*args):
            if args[1] == "down":
                if self.random_state:
                    self.video_random_selected = random.choice(self.videos)
                    self.label_title.text = self.video_random_selected
                    self.video_player.source = self.video_random_selected
                    self.video_player.state = "play"
                else:
                    video_index = 0
                    for index, value in enumerate(self.videos):
                        if value == self.video_random_selected:
                            video_index = index
                            break

                    video_index = -1 if video_index >= len(self.videos) - 1 else video_index
                    video_atual = self.videos[video_index + 1]
                    self.video_random_selected = video_atual
                    self.label_title.text = video_atual
                    self.video_player.source = video_atual
                    self.video_player.state = "play"

                            def prev_video(*args):
            if args[1] == "down":
                if self.random_state:
                    self.video_random_selected = random.choice(self.videos)
                    self.label_title.text = self.video_random_selected
                    self.video_player.source = self.video_random_selected
                    self.video_player.state = "play"


                else:
                    video_index = 0
                    for index, value in enumerate(self.videos):
                        if value == self.video_random_selected:
                            video_index = index
                            break

                    video_atual = self.videos[video_index - 1]
                    self.video_random_selected = video_atual
                    self.label_title.text = video_atual
                    self.video_player.source = video_atual
                    self.video_player.state = "play"






    def build2(self):
        def check_active(checkbox, value):
            if value:
                print("A checkbox foi ativada")
            else:
                print("A checkbox foi desativada")

        check = CheckBox()
        check.bind(active=check_active)
        return check

    def build7(self):
        slide = Slider(orientation="horizontal", value_track=True, value_track_color=(1, 0, 0, 1))
        slide.value = 50
        return slide

    def build8(self):
        progress = ProgressBar(max=1000)
        progress.value = 350
        return progress

    def build11(self):

        def btn1(a, b):
            if b == 'down':
                print("Apertou o botao 1")

        def btn2(a, b):
            if b == 'down':
                print("Apertou o botao 2")

        def btn3(a, b):
            if b == 'down':
                print("Apertou o botao 3")

        def btn4(a, b):
            if b == 'down':
                print("Apertou o botao 4")

        btn_1 = Button(text="opa")
        btn_2 = Button(text="opa")
        btn_3 = Button(text="opa")
        btn_4 = Button(text="opa")

        btn_1.bind(state=btn1)
        btn_2.bind(state=btn2)
        btn_3.bind(state=btn3)
        btn_4.bind(state=btn4)

        layout = GridLayout(cols=2)
        layout.add_widget(btn_1)
        layout.add_widget(btn_2)
        layout.add_widget(btn_3)
        layout.add_widget(btn_4)

        return layout


------------------------
layout = ScatterLayout()

        btn_prev = Button(text="prev", size_hint=(.15, .15))
        btn_prev.pos = (0, 10)
        btn_prev.bind(state=prev_video)

        btn_next = Button(text="next", size_hint=(.15, .15))
        btn_next.pos = ((Window.width - (btn_next.width * 1.2)), 10)
        btn_next.bind(state=next_video)

        btn_random = ToggleButton(text="RN", size_hint=(None, None), width=40, height=25)
        btn_random.pos = ((Window.width / 2) - btn_random.width, 10)
        btn_random.bind(state=turn_random)

        btn_delete = Button(text="Del", size_hint=(None, None), width=40, height=25)
        btn_delete.pos = ((Window.width / 2) + btn_delete.width, 10)
        btn_delete.bind(state=delete_file)

        self.video_player.pos = (0, 100)
        self.label_title.pos = (0, 270)

        layout.add_widget(self.video_player)
        layout.add_widget(btn_next)
        layout.add_widget(btn_prev)
        layout.add_widget(btn_random)
        layout.add_widget(btn_delete)
        layout.add_widget(self.label_title)
        return layout